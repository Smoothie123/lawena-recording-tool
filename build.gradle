buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

try {
    new ByteArrayOutputStream().withStream { execOS ->
        exec {
            executable = 'git'
            args = [ 'describe', '--tags', '--always' ]
            standardOutput = execOS
        }
        def describe = execOS.toString().trim()
        version describe
    }
} catch (Exception ignored) {
    println "Could not retrieve version number"
}

jar {
    archiveName = 'lawena.jar'
    destinationDir = null
    def implVersion = (version == null ? "5.0.0-SNAPSHOT" : version)
    manifest {
        attributes (
                'Implementation-Title': 'Lawena Recording Tool',
                'Implementation-Version': implVersion
        )
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    optional 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'org.controlsfx:controlsfx:8.40.10'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.4'
    compile 'com.github.spullara.mustache.java:compiler:0.9.1'
    compile 'org.eclipse.jgit:org.eclipse.jgit:4.1.1.201511131810-r'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

bootRun {
    jvmArgs = [ "-Xmx32m", "-Djavafx.preloader=com.github.lawena.LawenaPreloader" ]
}

compileJava.dependsOn(processResources)
bootRepackage.withJarTask = jar
